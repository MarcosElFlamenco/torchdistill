datasets:
  ilsvrc2012:
    name: &dataset_name 'ilsvrc2012'
    key: 'ImageFolder'
    root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &imagenet_train !join [*dataset_name, '/train']
        kwargs:
          root: !join [*root_dir, '/train']
          transform_configs:
            - key: 'RandomResizedCrop'
              kwargs:
                size: &input_size [224, 224]
            - key: 'RandomHorizontalFlip'
              kwargs:
                p: 0.5
            - &totensor
              key: 'ToTensor'
              kwargs:
            - &normalize
              key: 'Normalize'
              kwargs:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &imagenet_val !join [*dataset_name, '/val']
        kwargs:
          root: !join [*root_dir, '/val']
          transform_configs:
            - key: 'Resize'
              kwargs:
                size: 256
            - key: 'CenterCrop'
              kwargs:
                size: *input_size
            - *totensor
            - *normalize

models:
  teacher_model:
    key: &teacher_model_key 'resnet34'
    kwargs:
      num_classes: 1000
      pretrained: True
    src_ckpt:
  student_model:
    key: &student_model_key 'resnet18'
    kwargs:
      num_classes: 1000
      pretrained: False
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_key, '_from_', *teacher_model_key]
    src_ckpt:
    dst_ckpt: !join ['./imagenet/pad/', *student_experiment, '.pt']

train:
  log_freq: 1000
  stage1:
    num_epochs: 30
    train_data_loader:
      dataset_id: *imagenet_train
      random_sample: True
      batch_size: 171
      num_workers: 16
      cache_output:
    val_data_loader:
      dataset_id: *imagenet_val
      random_sample: False
      batch_size: 256
      num_workers: 16
    teacher:
      sequential: []
      forward_hook:
        input: []
        output: ['avgpool']
      wrapper: 'DataParallel'
      requires_grad: False
    student:
      adaptations:
      sequential: []
      auxiliary_model_wrapper:
        key: 'VarianceBranch4PAD'
        kwargs:
          input_module:
            path: 'student_model.avgpool'
            io: 'output'
          feat_dim: 512
          var_estimator_ckpt: !join ['./imagenet/pad/', *student_experiment, '_var_estimator.pt']
      frozen_modules: []
      forward_hook:
        input: []
        output: ['student_model.avgpool', 'var_estimator']
      wrapper:
      requires_grad: True
    optimizer: &optimizer
      key: 'SGD'
      kwargs:
        lr: 0.002
        momentum: 0.9
        weight_decay: 0.0001
    scheduler: &scheduler
      key: 'MultiStepLR'
      kwargs:
        milestones: [30]
        gamma: 0.1
    criterion:
      key: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          ce:
            criterion:
              key: 'CrossEntropyLoss'
              kwargs:
                reduction: 'mean'
            criterion_wrapper:
              key: 'SimpleLossWrapper'
              kwargs:
                input:
                  is_from_teacher: False
                  module_path: '.'
                  io: 'output'
                target:
                  uses_label: True
            weight: 1.0
          pad_l2:
            criterion:
              key: 'PADL2Loss'
              kwargs:
                student_embed_module_path: 'student_model.avgpool'
                student_embed_module_io: 'output'
                teacher_embed_module_path: 'avgpool'
                teacher_embed_module_io: 'output'
                module_path: 'var_estimator'
                module_io: 'output'
                eps: 0.000001
                reduction: 'mean'
            weight: 1.0

test:
  test_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 1
    num_workers: 16
