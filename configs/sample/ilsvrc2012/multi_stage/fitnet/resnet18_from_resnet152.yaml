datasets:
  ilsvrc2012:
    name: &dataset_name 'ilsvrc2012'
    key: 'ImageFolder'
    root: &root_dir !join ['./resource/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &imagenet_train !join [*dataset_name, '/train']
        kwargs:
          root: !join [*root_dir, '/train']
          transform_configs:
            - key: 'RandomResizedCrop'
              kwargs:
                size: &input_size [224, 224]
            - key: 'RandomHorizontalFlip'
              kwargs:
                p: 0.5
            - &totensor
              key: 'ToTensor'
              kwargs:
            - &normalize
              key: 'Normalize'
              kwargs:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &imagenet_val !join [*dataset_name, '/val']
        kwargs:
          root: !join [*root_dir, '/val']
          transform_configs:
            - key: 'Resize'
              kwargs:
                size: 256
            - key: 'CenterCrop'
              kwargs:
                size: *input_size
            - *totensor
            - *normalize

models:
  teacher_model:
    key: &teacher_model_key 'resnet152'
    kwargs:
      num_classes: 1000
      pretrained: True
    experiment: &teacher_experiment !join [*dataset_name, '-', *teacher_model_key]
    ckpt: !join ['./resource/ckpt/ilsvrc2012/teacher/', *teacher_experiment, '.pt']
  student_model:
    key: &student_model_key 'resnet18'
    kwargs:
      num_classes: 1000
      pretrained: False
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_key, '_from_', *teacher_model_key]
    ckpt: !join ['./resource/ckpt/ilsvrc2012/multi_stage/fitnet/', *student_experiment, '.pt']

train:
  log_freq: 1000
  stage1:
    num_epochs: 5
    train_data_loader:
      dataset_id: *imagenet_train
      random_sample: True
      batch_size: 32
      num_workers: 16
      cache_output:
    val_data_loader:
      dataset_id: *imagenet_val
      random_sample: False
      batch_size: 32
      num_workers: 16
    teacher:
      sequential: ['conv1', 'bn1', 'relu', 'maxpool', 'layer1']
      forward_hook:
        input: []
        output: ['layer1']
      wrapper: 'DistributedDataParallel'
      requires_grad: False
    student:
      adaptations:
        convreg:
          key: 'ConvReg'
          kwargs:
            num_input_channels: 64
            num_output_channels: 256
            kernel_size: 1
            stride: 1
            padding: 0
            uses_relu: True
      sequential: ['conv1', 'bn1', 'relu', 'maxpool', 'layer1', '+convreg']
      frozen_modules: []
      forward_hook:
        input: []
        output: ['+convreg']
      wrapper: 'DistributedDataParallel'
      requires_grad: True
    optimizer:
      key: 'Adam'
      kwargs:
        lr: 0.001
    scheduler:
      key: 'MultiStepLR'
      kwargs:
        milestones: [3]
        gamma: 0.1
    criterion:
      key: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          layer1:
            criterion:
              key: 'MSELoss'
              kwargs:
                reduction: 'sum'
            criterion_wrapper:
              key: 'SimpleLossWrapper'
              kwargs:
                input:
                  is_from_teacher: False
                  module_path: '+convreg'
                  io: 'output'
                target:
                  is_from_teacher: True
                  module_path: 'layer1'
                  io: 'output'
            weight: 1.0
  stage2:
    num_epochs: 15
    teacher:
      sequential: []
      wrapper: 'DistributedDataParallel'
      requires_grad: False
    student:
      adaptations:
      sequential: []
      wrapper: 'DistributedDataParallel'
      requires_grad: True
      frozen_modules: []
    optimizer:
      key: 'SGD'
      kwargs:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      key: 'MultiStepLR'
      kwargs:
        milestones: [5, 10]
        gamma: 0.1
    criterion:
      key: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          kd:
            criterion:
              key: 'KDLoss'
              kwargs:
                temperature: 1.0
                alpha: 0.5
                reduction: 'batchmean'
            weight: 1.0

test:
  test_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 1
    num_workers: 16
