datasets:
  coco2017:
    name: &dataset_name 'coco2017'
    type: 'cocodetect'
    root: &root_dir !join ['./resource/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &coco_train !join [*dataset_name, '/train']
        images: !join [*root_dir, '/train2017']
        annotations: !join [*root_dir, '/annotations/instances_train2017.json']
        annotated_only: True
        random_horizontal_flip: 0.5
      val:
        dataset_id: &coco_val !join [*dataset_name, '/val']
        images: !join [*root_dir, '/val2017']
        annotations: !join [*root_dir, '/annotations/instances_val2017.json']
        annotated_only: False

models:
  teacher_model:
    name: &teacher_model_name 'fasterrcnn_resnet50_fpn'
    kwargs:
      pretrained: True
      progress: True
      num_classes: 91
      pretrained_backbone: True
    experiment: &teacher_experiment !join [*dataset_name, '-', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/coco2017/teacher/', *teacher_experiment, '.pt']
  student_model:
    name: &student_model_name 'custom_fasterrcnn_resnet_fpn'
    kwargs:
      pretrained: True
      progress: True
      num_classes: 91
      pretrained_backbone: True
      backbone:
        name: 'resnet18'
        kwargs:
          num_classes: 1000
          pretrained: True
          trainable_backbone_layers: 3
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_name, '_from_', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/coco2017/multi_stage/ft/', *student_experiment, '.pt']

train:
  log_freq: 1000
  stage1:
    num_epochs: 1
    train_data_loader:
      dataset_id: *coco_train
      random_sample: True
      num_workers: 4
      batch_sampler:
        type: 'GroupedBatchSampler'
        kwargs:
          aspect_ratio_group_factor: 3
          batch_size: 4
      collate_fn: 'coco_collate_fn'
      cache_output:
    val_data_loader:
      dataset_id: *coco_val
      random_sample: False
      batch_size: 1
      num_workers: 4
      collate_fn: 'coco_collate_fn'
    teacher:
      sequential: []
      auxiliary_model_wrapper:
        type: &teacher4ft 'Teacher4FactorTransfer'
        kwargs:
          minimal:
            auxiliary_model_wrapper:
              type: 'HeadRCNN'
              kwargs:
                head_rcnn:
                  sequential: ['backbone.body']
          input_module_path: 'teacher_model.seq.backbone.body.layer4'
          paraphraser_kwargs: &teacher4ft_paraphraser_kwargs
            k: 0.25
            num_input_channels: 2048
            kernel_size: 3
            stride: 1
            padding: 1
            uses_bn: True
          paraphraser_ckpt: &teacher4ft_paraphraser_ckpt !join ['./resource/ckpt/coco2017/multi_stage/ft/', *student_experiment, '_paraphraser.pt']
          uses_decoder: True
      forward_hook:
        input: []
        output: ['teacher_model.seq.backbone.body.layer4', 'paraphraser']
      wrapper:
      requires_grad: True
      frozen_modules: ['teacher_model']
    student:
      adaptations:
      auxiliary_model_wrapper:
        type: 'EmptyModule'
        kwargs:
      sequential: []
      forward_hook:
        input: []
        output: []
      wrapper:
      requires_grad: False
    optimizer:
      type: 'SGD'
      kwargs:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0005
    criterion:
      type: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          reconst:
            criterion:
              type: 'MSELoss'
              kwargs:
                reduction: 'sum'
            criterion_wrapper:
              type: 'SimpleLossWrapper'
              kwargs:
                input:
                  is_from_teacher: True
                  module_path: 'paraphraser'
                  io: 'output'
                target:
                  is_from_teacher: True
                  module_path: 'teacher_model.seq.backbone.body.layer4'
                  io: 'output'
              factor: 1.0
  stage2:
    num_epochs: 19
    teacher:
      forward_proc: 'forward_batch_target'
      sequential: []
      auxiliary_model_wrapper:
        type: *teacher4ft
        kwargs:
          minimal:
          input_module_path: 'teacher_model.backbone.body.layer4'
          paraphraser_kwargs: *teacher4ft_paraphraser_kwargs
          paraphraser_ckpt: *teacher4ft_paraphraser_ckpt
          uses_decoder: False
      forward_hook:
        input: []
        output: ['teacher_model.backbone.body.layer4', 'paraphraser']
      wrapper:
      requires_grad: False
    student:
      forward_proc: 'forward_batch_target'
      adaptations:
      sequential: []
      auxiliary_model_wrapper:
        type: 'Student4FactorTransfer'
        kwargs:
          input_module_path: 'student_model.backbone.body.layer4'
          translator_kwargs:
            num_input_channels: 512
            num_output_channels: 512
            kernel_size: 3
            stride: 1
            padding: 1
            uses_bn: True
      forward_hook:
        input: []
        output: ['student_model.backbone.body.layer4', 'translator']
      wrapper:
      requires_grad: True
      frozen_modules: ['student_model.backbone.body.conv1', 'student_model.backbone.body.bn1', 'student_model.backbone.body.relu', 'student_model.backbone.body.maxpool']
    optimizer:
      type: 'SGD'
      kwargs:
        lr: 0.0001
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      type: 'MultiStepLR'
      kwargs:
        milestones: [5, 10]
        gamma: 0.1
    criterion:
      type: 'WeightedSumLoss'
      func2extract_model_loss: 'extract_model_loss_dict'
      kwargs:
        model_term:
          factor: 1.0
        sub_terms:
          factor_transfer:
            criterion:
              type: 'FTLoss'
              kwargs:
                p: 1
                reduction: 'mean'
                paraphraser_path: 'paraphraser'
                translator_path: 'translator'
            factor: 1000.0

test:
  test_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 4
    collate_fn: 'coco_collate_fn'
