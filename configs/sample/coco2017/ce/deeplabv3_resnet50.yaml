datasets:
  coco2017:
    name: &dataset_name 'coco2017'
    key: 'cocodetect'
    root: &root_dir !join ['./resource/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &coco_train !join [*dataset_name, '/train']
        images: !join [*root_dir, '/train2017']
        annotations: !join [*root_dir, '/annotations/instances_train2017.json']
        annotated_only: True
        is_segment: True
        transforms_configs:
          - key: 'CustomRandomResize'
            kwargs:
              min_size: 260
              max_size: 1040
          - key: 'CustomRandomHorizontalFlip'
            kwargs:
              p: 0.5
          - key: 'CustomRandomCrop'
            kwargs:
              size: 480
          - &totensor
            key: 'CustomToTensor'
            kwargs:
          - &normalize
            key: 'CustomNormalize'
            kwargs:
              mean: [0.485, 0.456, 0.406]
              std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &coco_val !join [*dataset_name, '/val']
        images: !join [*root_dir, '/val2017']
        annotations: !join [*root_dir, '/annotations/instances_val2017.json']
        annotated_only: False
        is_segment: True
        transforms_configs:
          - key: 'CustomRandomResize'
            kwargs:
              min_size: 520
              max_size: 520
          - *totensor
          - *normalize

models:
  model:
    key: &student_model_key 'deeplabv3_resnet50'
    kwargs:
      pretrained: False
      pretrained_backbone: True
      num_classes: 21
      aux_loss: True
    experiment: &student_experiment !join [*dataset_name, '-', *student_model_key]
    src_ckpt:
    dst_ckpt: !join ['./resource/ckpt/coco2017/ce/', *student_experiment, '.pt']

train:
  log_freq: 1000
  num_epochs: &num_epochs 30
  train_data_loader:
    dataset_id: *coco_train
    random_sample: True
    num_workers: 16
    batch_size: 4
    collate_fn: 'coco_seg_collate_fn'
    drop_last: True
    cache_output:
  val_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'coco_seg_eval_collate_fn'
  model:
    adaptations:
    sequential: []
    forward_hook:
      input: []
      output: []
    wrapper: 'DistributedDataParallel'
    requires_grad: True
    frozen_modules: []
  optimizer:
    key: 'SGD'
    kwargs:
      lr: 0.0025
      momentum: 0.9
      weight_decay: 0.0001
    module_wise_configs:
      - module: 'backbone'
        kwargs: {}
      - module: 'classifier'
        kwargs: {}
      - module: 'aux_classifier'
        kwargs:
          lr: 0.025
  scheduler:
    key: 'poly_lr_scheduler'
    kwargs:
      num_iterations: None
      num_epochs: *num_epochs
      power: 0.9
    scheduling_step: 1
  criterion:
    key: 'WeightedSumLoss'
    func2extract_model_loss: 'extract_simple_model_loss_dict'
    kwargs:
      sub_terms:
        ce:
          criterion:
            key: 'CrossEntropyLoss'
            kwargs:
              reduction: 'mean'
              ignore_index: 255
          criterion_wrapper:
            key: 'SimpleLossWrapper'
            kwargs:
              input:
                is_from_teacher: False
                module_path: '.'
                io: 'output'
              target:
                uses_label: True
          weight:
            out: 1.0
            aux: 0.5

test:
  test_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'coco_seg_eval_collate_fn'